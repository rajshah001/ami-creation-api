os: linux

env:
  global:
    - AWS_DEFAULT_REGION=ap-southeast-2
    - ACCOUNT_ID=047365995724
    - PROVIDER=aws
    - PACKAGES='["nginx-playbook"]'
    - AMI_NAME=automated-ami

install:
  - echo "Install AWSCLI v2"
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - sudo ./aws/install
  - echo "Install Packer"
  - curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
  - sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
  - sudo apt-get update && sudo apt-get install packer
  - echo "Install Ansible"
  - sudo apt-get purge ansible
  - sudo apt-get install software-properties-common -y
  - sudo apt-add-repository ppa:ansible/ansible -y
  - sudo apt-get update
  - sudo apt-get install ansible -y
  - ansible --version
  - echo "Make Shell Scripts Executable"
  - chmod +x ./generate-packer-script.sh ./assume_role.sh ./aws-setup.sh
  - echo "Export Creds for default AWS Setup"
  - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  - export TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR}
  - echo "Export Creds for default Azure Setup"
  - export AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
  - export AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
  - export AZURE_TENANT_ID=${AZURE_TENANT_ID}
  - export AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
  - bash aws-setup.sh
  - export PACKAGES=${PACKAGES}
  - export AMI_NAME=${AMI_NAME}
  - export PROVIDER=${PROVIDER}

jobs:
  include:
    - stage: Deploy
      if: (branch IN (master) AND type != pull_request) OR (branch NOT IN (master) AND type NOT IN (push, pull_request))
      script:
      - echo "Generating Packer Script with selected Provisioners"
      - bash generate-packer-script.sh > ${TRAVIS_BUILD_DIR}/tempfile.json
      - cat ${TRAVIS_BUILD_DIR}/tempfile.json
      - bash assume_role.sh arn:aws:iam::${ACCOUNT_ID}:role/CrossAccountRole default ${PROVIDER}
      - aws s3 sync --profile ${PROVIDER} s3://ami-creation-automation .
      - packer build ${TRAVIS_BUILD_DIR}/builds/${PROVIDER}-build.pkr
