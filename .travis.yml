os: linux

env:
  global:
    - AWS_DEFAULT_REGION=ap-southeast-2
    - PROVIDER=aws
    - PACKAGES='["nginx-playbook"]'
    - AMI_NAME=automated-ami
    # - NEW_AWS_ACCOUNT_ID=047365995724

install:
  - echo "Install AWSCLI v2"
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - sudo ./aws/install
  - echo "Install Azure CLI"
  - curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
  - echo "Install Packer"
  - curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
  - sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
  - sudo apt-get update && sudo apt-get install packer
  - echo "Install Ansible"
  - sudo apt-get purge ansible
  - sudo apt-get install software-properties-common -y
  - sudo apt-add-repository ppa:ansible/ansible -y
  - sudo apt-get update
  - sudo apt-get install ansible -y
  - ansible --version
  - echo "Make Shell Scripts Executable"
  - chmod +x ./generate-packer-script.sh ./assume_role.sh ./aws-setup.sh ./decrypter.sh
  - echo "Export Creds for default AWS Setup"
  - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  - export NEW_AWS_ACCESS_KEY_ID=${NEW_AWS_ACCESS_KEY_ID}
  - export NEW_AWS_SECRET_ACCESS_KEY=${NEW_AWS_SECRET_ACCESS_KEY}
  - export NEW_AWS_ACCOUNT_ID=${NEW_AWS_ACCOUNT_ID}
  - export TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR}
  - echo "Export Creds for default Azure Setup"
  - export AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
  - export AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
  - export AZURE_TENANT_ID=${AZURE_TENANT_ID}
  - export AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
  - export AZURE_RESOURCE_GROUP=${AZURE_RESOURCE_GROUP}
  - echo "Export Creds for default GCP Setup"
  - export GCP_PROJECT_ID=${GCP_PROJECT_ID}
  - export GCP_ACCESS_TOKEN=${GCP_ACCESS_TOKEN}
  - source decrypter.sh
  - bash aws-setup.sh
  - ls -al
  - cat ~/.aws/credentials
  - export PACKAGES=${PACKAGES}
  - export AMI_NAME=${AMI_NAME}
  - export PROVIDER=${PROVIDER}
  # - bash assume_role.sh arn:aws:iam::${NEW_AWS_ACCOUNT_ID}:role/CrossAccountRole default ${PROVIDER}
  - echo "Common Operations"
  - echo "Generating Packer Script with selected Provisioners"
  - bash generate-packer-script.sh > ${TRAVIS_BUILD_DIR}/tempfile.json
  - aws s3 sync s3://ami-creation-automation .
  - sudo apt install jq
jobs:
  include:
    - stage: Deploy VM in AWS
      if: (branch IN (master) AND type NOT IN (push, pull_request) AND (env(PROVIDER) = aws))
      script:
      - packer build ${TRAVIS_BUILD_DIR}/builds/${PROVIDER}-build.pkr 2>&1 | sudo tee output.txt
      - cat ${TRAVIS_BUILD_DIR}/manifest.json
      - export AMI_ID=`cat ${TRAVIS_BUILD_DIR}/manifest.json | jq '.builds[0].artifact_id' | tr -d '"' | awk 'match($0, /ami-.*/) { print substr($0, RSTART, RLENGTH) }'`
      - aws ec2 run-instances --profile ${PROVIDER} --region ap-southeast-2 --image-id ${AMI_ID} --instance-type t2.micro --key-name sydney-kp-new

    - stage: Deploy VM in Azure
      if: (branch IN (master) AND type NOT IN (push, pull_request) AND (env(PROVIDER) = azure))
      script:
      - packer build ${TRAVIS_BUILD_DIR}/builds/${PROVIDER}-build.json 2>&1 | sudo tee output.txt
      - az login --service-principal -u ${AZURE_CLIENT_ID} -p ${AZURE_CLIENT_SECRET} --tenant ${AZURE_TENANT_ID}
      - az vm create --resource-group ${AZURE_RESOURCE_GROUP} --name ${AMI_NAME} --image ${AMI_NAME} --generate-ssh-keys
      - aws s3 sync ~/.ssh/* s3://ami-creation-automation/azure-generated-keys
    
    - stage: Deploy VM in GCP
      if: (branch IN (master) AND type NOT IN (push, pull_request) AND (env(PROVIDER) = gcp))
      script:
      - packer build ${TRAVIS_BUILD_DIR}/builds/${PROVIDER}-build.json 2>&1 | sudo tee output.txt
      - gcloud auth activate-service-account --key-file ${TRAVIS_BUILD_DIR}/gcp-sa-keys/key.json
      - gcloud compute instances create ${AMI_NAME} --project=${GCP_PROJECT_ID} --zone=australia-southeast1-a --machine-type=e2-medium --no-service-account --no-scopes --create-disk=auto-delete=yes,boot=yes,device-name=${AMI_NAME},image=projects/${GCP_PROJECT_ID}/global/images/${AMI_NAME},mode=rw,size=20,type=projects/${GCP_PROJECT_ID}/zones/us-central1-a/diskTypes/pd-balanced --no-shielded-secure-boot --shielded-vtpm --shielded-integrity-monitoring --reservation-affinity=any